<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="NormalStateBackground0" >#FFFBFCFE</Color>
    <Color x:Key="NormalStateBackground1" >#FFD7E5FF</Color>

    <Color x:Key="PressedStateBorder" >#FFFFA30A</Color>
    <Color x:Key="PressedStateBackground0" >White</Color>
    <Color x:Key="PressedStateBackground1" >White</Color>

    <Color x:Key="MouseOverStateBorder" >#FF09285E</Color>
    <Color x:Key="MouseOverStateBackground0" >#FFD7E3FB</Color>
    <Color x:Key="MouseOverStateBackground1" >White</Color>

    <Color x:Key="DisabledStateBorder" >#FF9B9B9B</Color>
    <Color x:Key="IconOtherState" >Black</Color>

    <ControlTemplate x:Key="CommonComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Border x:Name="ToggleBorder" Grid.Column="0" BorderBrush="Transparent" BorderThickness="1" CornerRadius="3">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="{StaticResource NormalStateBackground0}" Offset="0"/>
                        <GradientStop Color="{StaticResource NormalStateBackground1}" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked" >
                        <Storyboard >

                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="{StaticResource ResourceKey=MouseOverStateBackground0}"  Duration="0:0:0.1"/>
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="{StaticResource ResourceKey=MouseOverStateBackground1}"  Duration="0:0:0.1"/>

                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>

                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.0" />
                        <VisualTransition GeneratedDuration="0:0:0.0" To="Pressed" />
                        <VisualTransition GeneratedDuration="0:0:0.0" From="Pressed" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="{StaticResource ResourceKey=PressedStateBackground0}"  Duration="0:0:0.1"/>
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="{StaticResource ResourceKey=PressedStateBackground1}"  Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>

                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=DisabledStateBorder}" Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CommonComboBoxToggleButtonOverlay" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Border x:Name="ToggleBorder" Grid.Column="0" BorderBrush="#FF133E8A" BorderThickness="1" CornerRadius="3" Background="Transparent" />
            <Path x:Name="Arrow" Stretch="Fill" Fill="#FF133E8A" Data="F1 M 1103.87,11.6153C 1102.91,11.6153 1101.95,11.2715 1101.19,10.5841L 1088.77,-0.63472C 1087.13,-2.11512 1087,-4.64512 1088.48,-6.28445C 1089.96,-7.92245 1092.49,-8.05259 1094.13,-6.57218L 1103.87,2.22208L 1113.59,-6.58126C 1115.23,-8.06565 1117.76,-7.93805 1119.24,-6.30139C 1120.72,-4.66325 1120.6,-2.13473 1118.96,-0.65152L 1106.56,10.5802C 1105.79,11.2703 1104.83,11.6153 1103.87,11.6153 Z " 
                  HorizontalAlignment="Right" Margin="9,0,9,0" Width="10" Height="6" VerticalAlignment="Center" RenderTransformOrigin="0.5, 0.5" />

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked" >
                        <Storyboard >
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=MouseOverStateBorder}"  Duration="0:0:0.1"/>
                            <ColorAnimation  Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=IconOtherState}" Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>

                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.0" />
                        <VisualTransition GeneratedDuration="0:0:0.0" To="Pressed" />
                        <VisualTransition GeneratedDuration="0:0:0.0" From="Pressed" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=PressedStateBorder}"  Duration="0:0:0.1"/>
                            <ColorAnimation  Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=IconOtherState}" Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>

                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ToggleBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=DisabledStateBorder}" Duration="0:0:0.1"/>
                            <ColorAnimation  Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource ResourceKey=IconOtherState}" Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <ContentPresenter Margin="3,3" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#449BB9F7" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="#FFFFDB8C" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>

                    <Grid SnapsToDevicePixels="True">

                        <ToggleButton Name="ToggleButton" Template="{StaticResource CommonComboBoxToggleButton}" Grid.Column="1" Focusable="False" Cursor="Hand"
                                      IsChecked="{Binding ElementName=ToggleButtonOverlay, Path=IsChecked, Mode=OneWay}" ClickMode="Press" />

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="True" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="7,3,28,3" VerticalAlignment="Center" HorizontalAlignment="Stretch" />

                        <ToggleButton Name="ToggleButtonOverlay" Template="{StaticResource CommonComboBoxToggleButtonOverlay}" Grid.Column="1" Focusable="False" Cursor="Hand"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />

                        <Popup x:Name="Popup" Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" Padding="1" Margin="0,1,0,0"
                                        BorderBrush="Black"
                                        Background="White">
                                    <ScrollViewer CanContentScroll="True" >
                                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" >
                                            <VirtualizingStackPanel.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#33FF0000" />
                                            </VirtualizingStackPanel.Resources>
                                        </VirtualizingStackPanel>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


</ResourceDictionary>