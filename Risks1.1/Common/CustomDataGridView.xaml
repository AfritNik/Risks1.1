<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="#FF7087BB">
                        <Border x:Name="border" BorderThickness="1,1,0,0" BorderBrush="#FFCFDDF7" Background="#FFBBCEF3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFFFDB8C" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFC6B989" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="mainBorder" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="True">
                            <Setter Property="Background" TargetName="mainBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFCBD9F7" Offset="0"/>
                                        <GradientStop Color="#FFE1E9FB" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Tag" Value="False">
                            <Setter Property="Background" TargetName="mainBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FFCBD9F7" Offset="0"/>
                                        <GradientStop Color="#FFE1E9FB" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="mainBorder" Background="#FFC4D7FD">
                        <Path x:Name="Arrow" Width="10" Height="4" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#FF36466F" 
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Fill" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mainBorder" Property="Background" Value="#FFFFDB8C" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="35" />
        <Setter Property="SeparatorBrush" Value="DarkRed" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="columnHeaderBorder"	BorderThickness="1" Padding="3,0,3,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#A5A5A5" />
                                    <GradientStop Offset="1" Color="#4B4B4B" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#FF9BB9F7" />
                                <!--<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#DEB40A" />
                                    <GradientStop Offset="1" Color="#FF7F00" />
                                </LinearGradientBrush>-->
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="LightYellow" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu  DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="Add"  >
                      
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0"
					           VerticalAlignment="Center"
					           Foreground="Red"
					           Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="1" Color="White" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <!--<EasingColorKeyFrame KeyTime="0" Value="#CCAA0000" />-->
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFFFDB8C" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <!--<EasingColorKeyFrame KeyTime="0" Value="#77D52B00" />-->
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFFFDB8C" />                                            
                                        </ColorAnimationUsingKeyFrames>
                                        
                                    </Storyboard>
                                </VisualState>
                                <!--<VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).                         (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#AAEA9595" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).                         (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#AAF54B4B" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
							                        ItemsPanel="{TemplateBinding ItemsPanel}"
							                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Row="1"
							                          Grid.Column="1"
							                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
							                                                                                         ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
							                                                                                         Converter={x:Static DataGrid.RowDetailsScrollingConverter},
							                                                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
							                          Visibility="{TemplateBinding DetailsVisibility}" />
                            <!--<DataGridRowHeader Grid.RowSpan="2"
							                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
							                   Visibility="{Binding HeadersVisibility,
							                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row},
							                                        Converter={x:Static DataGrid.HeadersVisibilityConverter},
							                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />-->
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
					        Background="Transparent"
					        BorderBrush="Transparent"
					        BorderThickness="1"
					        SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="#FF23519F"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border x:Name="background" BorderThickness="0" Background="Red">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" RenderTransformOrigin="0.5, 0.5"                           
                              Command="ScrollBar.LineUpCommand" Content="F1 M 1103.87,11.6153C 1102.91,11.6153 1101.95,11.2715 1101.19,10.5841L 1088.77,-0.63472C 1087.13,-2.11512 1087,-4.64512 1088.48,-6.28445C 1089.96,-7.92245 1092.49,-8.05259 1094.13,-6.57218L 1103.87,2.22208L 1113.59,-6.58126C 1115.23,-8.06565 1117.76,-7.93805 1119.24,-6.30139C 1120.72,-4.66325 1120.6,-2.13473 1118.96,-0.65152L 1106.56,10.5802C 1105.79,11.2703 1104.83,11.6153 1103.87,11.6153 Z " >
                    <RepeatButton.RenderTransform>
                        <ScaleTransform ScaleY="-1"/>
                    </RepeatButton.RenderTransform>
                </RepeatButton>

                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" Tag="True"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" Tag="True"/>
                    </Track.IncreaseRepeatButton>
                </Track>

                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" 
                              Command="ScrollBar.LineDownCommand" Content="F1 M 1103.87,11.6153C 1102.91,11.6153 1101.95,11.2715 1101.19,10.5841L 1088.77,-0.63472C 1087.13,-2.11512 1087,-4.64512 1088.48,-6.28445C 1089.96,-7.92245 1092.49,-8.05259 1094.13,-6.57218L 1103.87,2.22208L 1113.59,-6.58126C 1115.23,-8.06565 1117.76,-7.93805 1119.24,-6.30139C 1120.72,-4.66325 1120.6,-2.13473 1118.96,-0.65152L 1106.56,10.5802C 1105.79,11.2703 1104.83,11.6153 1103.87,11.6153 Z " >

                </RepeatButton>
            </Grid>
        </Border>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Pink" TargetName="background" />
                <Setter Property="Background" Value="Pink" TargetName="thumb" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightBlue" TargetName="background" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="thumb">
                <Setter Property="Background" Value="LightBlue" TargetName="thumb" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>
    <Style TargetType="ToggleButton">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DefaultPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#AA0000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
										                               Storyboard.TargetName="DefaultPath"
										                               Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
										                               Storyboard.TargetName="CheckedPath"
										                               Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckedPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#CCAA0000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
						                  Margin="{TemplateBinding Padding}"
						                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						                  Content="{TemplateBinding Content}"
						                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Path x:Name="DefaultPath"
						      VerticalAlignment="Top"
						      Data="M0,0 14,7 0,14 Z"
						      Fill="Gray"
						      Stretch="Fill" />
                        <Path x:Name="CheckedPath"
						      VerticalAlignment="Top"
						      Data="M0,0 14,0 7,14 Z"
						      Fill="LightGray"
						      Stretch="Fill"
						      Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Border x:Name="background" BorderThickness="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>

                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"                         
                              Command="ScrollBar.LineUpCommand" Content="F1 M 1103.87,11.6153C 1102.91,11.6153 1101.95,11.2715 1101.19,10.5841L 1088.77,-0.63472C 1087.13,-2.11512 1087,-4.64512 1088.48,-6.28445C 1089.96,-7.92245 1092.49,-8.05259 1094.13,-6.57218L 1103.87,2.22208L 1113.59,-6.58126C 1115.23,-8.06565 1117.76,-7.93805 1119.24,-6.30139C 1120.72,-4.66325 1120.6,-2.13473 1118.96,-0.65152L 1106.56,10.5802C 1105.79,11.2703 1104.83,11.6153 1103.87,11.6153 Z " >
                    <RepeatButton.RenderTransform>
                        <RotateTransform CenterX="9" CenterY="9" Angle="90" />
                    </RepeatButton.RenderTransform>
                </RepeatButton>

                <!--<RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="12"
                              Command="ScrollBar.LineLeftCommand" Content="M0,4.5 L4,0 4,9 z" />-->
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton  Command="ScrollBar.PageLeftCommand"  Tag="False"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton  Command="ScrollBar.PageRightCommand"  Tag="False"/>
                    </Track.IncreaseRepeatButton>
                </Track>

                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18"                          
                              Command="ScrollBar.LineUpCommand" Content="F1 M 1103.87,11.6153C 1102.91,11.6153 1101.95,11.2715 1101.19,10.5841L 1088.77,-0.63472C 1087.13,-2.11512 1087,-4.64512 1088.48,-6.28445C 1089.96,-7.92245 1092.49,-8.05259 1094.13,-6.57218L 1103.87,2.22208L 1113.59,-6.58126C 1115.23,-8.06565 1117.76,-7.93805 1119.24,-6.30139C 1120.72,-4.66325 1120.6,-2.13473 1118.96,-0.65152L 1106.56,10.5802C 1105.79,11.2703 1104.83,11.6153 1103.87,11.6153 Z " >
                    <RepeatButton.RenderTransform>
                        <RotateTransform CenterX="9" CenterY="9" Angle="-90" />
                    </RepeatButton.RenderTransform>
                </RepeatButton>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ScrollBarStyle2" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
     
   
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">

        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="2"
					        CornerRadius="5"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <!--<ColumnDefinition Width="Auto" />-->
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset,
										                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										        Command="{x:Static DataGrid.SelectAllCommand}"
										        Focusable="false"
										        
										        Visibility="{Binding HeadersVisibility,
										                             ConverterParameter={x:Static DataGridHeadersVisibility.All},
										                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
										                                Grid.Column="0" 
										                                Visibility="{Binding HeadersVisibility,
										                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
										                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
										                        Grid.Row="1"
										                        Grid.ColumnSpan="1"
										                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
										           Grid.Row="0"
										           Grid.Column="1"
                                                   Grid.RowSpan="2"
										           Maximum="{TemplateBinding ScrollableHeight}"
										           Orientation="Vertical"
										            Style="{StaticResource ScrollBarStyle2}" 
										           ViewportSize="{TemplateBinding ViewportHeight}"
										           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										           Value="{Binding VerticalOffset,
										                           Mode=OneWay,
										                           RelativeSource={RelativeSource TemplatedParent}}" />
                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
										          Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
										           Maximum="{TemplateBinding ScrollableWidth}"
										           Orientation="Horizontal"
										            Style="{StaticResource ScrollBarStyle2}" 
										           ViewportSize="{TemplateBinding ViewportWidth}"
										           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
										           Value="{Binding HorizontalOffset,
										                           Mode=OneWay,
										                           RelativeSource={RelativeSource TemplatedParent}}" />
                                     
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>

                    </Border>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsScadaPropertiesOpen" Value="True">
                            <Setter TargetName="PopupGrid" Property="Height" Value="Auto" />
                        </Trigger>-->

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>