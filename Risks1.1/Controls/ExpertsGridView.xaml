<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApplication1"
                    xmlns:common="clr-namespace:WpfApplication1.Common"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Common/CommonStyles.xaml"/>
        <ResourceDictionary Source="../Common/CustomDataGridView.xaml"/>
    </ResourceDictionary.MergedDictionaries>



    <Style x:Key="{x:Type local:ExpertsGrid}" TargetType="{x:Type local:ExpertsGrid}">

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type local:ExpertsGrid}">
                    
                    <Border BorderBrush="#FF0D3883" BorderThickness="0"  Background="#FF133E8B" Margin="10,3,10,0">
                        <Border.Effect>
                            <DropShadowEffect Color="#FF0D3883" ShadowDepth="0"/>
                        </Border.Effect>
                        <Border BorderThickness="1" BorderBrush="#FF1B3F95" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--<RowDefinition Height="32" />-->
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0" Grid.ColumnSpan="3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF6A8ED8" Offset="0"/>
                                            <GradientStop Color="#FF3365C2" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0">
                                    <Button x:Name="AddTag" Margin="5,0,0,0" Content="Test" Style="{StaticResource toolBarAddButtonStyle}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AddExpertCommand}" />
                                    <Button x:Name="DeleteTag" Margin="5,0,0,0" Content="Test" Style="{StaticResource toolBarDeleteButtonStyle}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DeleteExpertCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedExpert}" />
                                </StackPanel>
                                <DataGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" x:Name="mainGrid" HorizontalAlignment="Left" VerticalAlignment="Top" CellStyle="{StaticResource GridCellStyle}" 
		                                  AlternationCount="2" AutoGenerateColumns="False" MinRowHeight="26" Style="{StaticResource DataGridStyle}" ColumnHeaderStyle="{StaticResource ColumnHeaderStyle}" RowStyle="{StaticResource GridRowStyle}"
		                                  ItemsSource="{Binding Source={x:Static common:EnterpriseFactory.Instance}, Path=Experts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedExpert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single"
                                          CanUserAddRows="False">
                                    <DataGrid.RowHeaderTemplate>
                                        <DataTemplate>
                                            <ToggleButton x:Name="RowHeaderToggleButton"  Cursor="Hand" />
                                        </DataTemplate>
                                    </DataGrid.RowHeaderTemplate>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn  Width="40*" MinWidth="50" Binding="{Binding ID}" IsReadOnly="True"   Header="ID"/>
                                        <DataGridTextColumn Width="120*" MinWidth="50"  Binding="{Binding Name}" IsReadOnly="False"   Header="Name" />
                                        <!--<DataGridTextColumn Width="20" MinWidth="50"  Binding="{Binding Enabled}" IsReadOnly="True" Header="Enabled" />-->
                                        <!--<DataGridTextColumn Width="50" MinWidth="50" Binding="{Binding Port}" IsReadOnly="True"  Header="Port" />
                                        <DataGridTextColumn Width="80" MinWidth="50" Binding="{Binding SlaveId}" IsReadOnly="True"  Header="SlaveId" />
                                        <DataGridTextColumn Width="20" MinWidth="50" Binding="{Binding LocalIp}" IsReadOnly="True"  Header="LocalIp" />
                                        <DataGridTextColumn Width="70" MinWidth="50" Binding="{Binding RemoteAddress}" IsReadOnly="True"  Header="RemoteAddress" />
                                        <DataGridTextColumn Width="80" MinWidth="50" Binding="{Binding Mode}" IsReadOnly="True" Header="Mode" />
                                        --><!--<DataGridTextColumn Width="40" MinWidth="50" Binding="{Binding Status}" IsReadOnly="True"  Header="State" />--><!--
                                        <DataGridTemplateColumn Header="State" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Path x:Name="State" Stretch="Fill" Data="M136.264,1.3E-05C171.176,-0.014697,206.123,12.0088,232.825,36.1147L430.955,214.979 621.741,42.8592C675.011,-5.3526 761.527,-5.22901 814.664,42.6238 867.667,90.5943 867.801,168.697 814.53,216.785L623.744,389.023 803.448,551.255C856.719,599.349 856.587,677.328 803.314,725.299 750.311,773.27 663.93,773.393 610.66,725.299L430.955,563.067 243.907,731.932C190.503,780.143 104.254,779.902 51.1172,731.932 -2.01967,683.961 -2.28695,606.099 51.1172,558.005L238.165,389.023 39.9028,210.035C-13.3677,161.947 -13.2341,83.9617 39.9028,36.1147 66.4712,12.0677 101.351,0.014729 136.264,1.3E-05z"   HorizontalAlignment="Center" Height="18" VerticalAlignment="Center" Width="18" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                        <Path.Fill>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="#FFFDD0CB"/>
                                                                <GradientStop Color="#FFFF3723" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding Path=Status}" Value="true">
                                                            <Setter TargetName="State" Property="Fill">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="White"/>
                                                                        <GradientStop Color="#FF11B820" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="State" Property="Data" Value="M455.05548082653,0L516.997009146842,62.584720969171 185.725540030631,318.996006369562 0,129.061100363702 71.4151533729164,74.9226192235656 195.006866324577,201.566776633234z"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        --><!--<DataGridTextColumn Width="20" MinWidth="50" Binding="{Binding Description}" IsReadOnly="True"  Header="Descr" />--><!--
                                        <DataGridTextColumn Width="*" MinWidth="50"  Binding="{Binding ModbusBehavior}" IsReadOnly="True" Header="ModbusBehavior" />-->
                                        
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                      

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>