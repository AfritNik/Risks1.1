<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApplication1"
                    xmlns:common="clr-namespace:WpfApplication1.Common"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:chart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart"
                    xmlns:DV="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
                    xmlns:DVC="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Common/CommonStyles.xaml"/>
        <ResourceDictionary Source="../Common/CustomDataGridView.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <local:RiskIDToNameConverter x:Key="RiskIDToNameConverter"/>

    <Style x:Key="{x:Type local:ResultGrid}" TargetType="{x:Type local:ResultGrid}">

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type local:ResultGrid}">

                    <Border BorderBrush="#FF0D3883" BorderThickness="0"  Background="#FF133E8B" >
                        <Border.Effect>
                            <DropShadowEffect Color="#FF0D3883" ShadowDepth="0"/>
                        </Border.Effect>
                        <Border BorderThickness="1" BorderBrush="#FF1B3F95" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--<RowDefinition Height="32" />-->
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0" Grid.ColumnSpan="3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF6A8ED8" Offset="0"/>
                                            <GradientStop Color="#FF3365C2" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0">
                                    <Button x:Name="AddTag" Margin="5,0,0,0" Content="Test" Style="{StaticResource toolBarAddButtonStyle}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UpdateCommand}" />

                                </StackPanel>
                                <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <DataGrid Grid.Row="0"  x:Name="mainGrid" HorizontalAlignment="Left" VerticalAlignment="Top" CellStyle="{StaticResource GridCellStyle}" 
		                                  AlternationCount="2" AutoGenerateColumns="False" MinRowHeight="26" Style="{StaticResource DataGridStyle}" ColumnHeaderStyle="{StaticResource ColumnHeaderStyle}" RowStyle="{StaticResource GridRowStyle}"
		                                  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=filteredCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single"
                                          CanUserAddRows="False">
                                            <DataGrid.RowHeaderTemplate>
                                                <DataTemplate>
                                                    <ToggleButton x:Name="RowHeaderToggleButton"  Cursor="Hand" />
                                                </DataTemplate>
                                            </DataGrid.RowHeaderTemplate>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn  Width="40*" MinWidth="50" Binding="{Binding ID, Converter={StaticResource RiskIDToNameConverter}}" IsReadOnly="True"   Header="Risk"/>

                                                <DataGridTextColumn Width="120*" MinWidth="50"  Binding="{Binding Importance}" IsReadOnly="False"   Header="Importance" />
                                                <DataGridTextColumn Width="120*" MinWidth="50"  Binding="{Binding InfluenceProb}" IsReadOnly="False"   Header="InfluenceProb" />
                                                <DataGridTextColumn Width="120*" MinWidth="50"  Binding="{Binding ExternalRate}" IsReadOnly="False"   Header="ExternalRate" />
                                                <DataGridTextColumn Width="120*" MinWidth="50"  Binding="{Binding ProtectionRate}" IsReadOnly="False"   Header="ProtectionRate" />

                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <chart:ClusteredColumnChart                               
                Style="{StaticResource ChartStyleVariableSize}"
                ChartTitle="Column Chart with dynamic series"
                ChartSubTitle="Chart with a dynamic width and height"                  
                Palette="{Binding Path=SelectedPalette.Value}"
                FontSize="{Binding Path=SelectedFontSize}"
                IsRowColumnSwitched="{Binding Path=IsRowColumnSwitched}"
                ChartTitleVisibility="{Binding Path=IsTitleVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                ChartLegendVisibility="{Binding Path=IsLegendVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                ToolTipFormat="{Binding Path=ToolTipFormat}"
                Foreground="{Binding Path=Foreground}" 
                Background="{Binding Path=Background}"                 
                SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
                SelectedBrush="{Binding Path=SelectedBrush, Converter={StaticResource StringToBrushConverter}}" 
                SeriesSource="{Binding Path=Series}">
                                            <chart:ClusteredColumnChart.SeriesTemplate>
                                                <DataTemplate>
                                                    <chart:ChartSeries
			                SeriesTitle="{Binding Path=SeriesDisplayName}"
                            DisplayMember="Category"
                            ValueMember="Number"
                            ItemsSource="{Binding Path=Items}" />
                                                </DataTemplate>
                                            </chart:ClusteredColumnChart.SeriesTemplate>
                                        </chart:ClusteredColumnChart>
                                    </Grid>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>